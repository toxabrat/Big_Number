#include <gtest/gtest.h>
#include "BigNumber.h"

TEST(BigNumberTest, translation_to_string1) {
    ASSERT_EQ(BigNumber("-12231234543894395437589734753.328423492349817287381").to_string(), "-12231234543894395437589734753.328423492349817287381");
}

TEST(BigNumberTest, translation_to_string2) {
    ASSERT_EQ(BigNumber("10000000000007589734753.328000423492349817287381").to_string(), "10000000000007589734753.328000423492349817287381");
}

TEST(BigNumberTest, comparisonisless) {
    ASSERT_EQ(BigNumber("32434324343243424.2343284939248324938249324") < BigNumber("343247243982453295487954783.5473915875894378954357438"), 1);
}

TEST(BigNumberTest, equality) {
    ASSERT_EQ((BigNumber("-9832434324343243424.2343284939248324938249324") == BigNumber("-9832434324343243424.2343284939248324938249324")),
                              ("-9832434324343243424.2343284939248324938249324" =="-9832434324343243424.2343284939248324938249324"));
}

TEST(BigNumberTest, equality2) {
    ASSERT_EQ((BigNumber("9832434324343243424.2343284939248324938249324") == BigNumber("-9832434324343243424.2343284939248324938249324")),
                              ("9832434324343243424.2343284939248324938249324" == "-9832434324343243424.2343284939248324938249324"));
}

TEST(BigNumberTest, addition) {
    ASSERT_EQ(BigNumber("-112300004292192000234.2343284939248324938249324") + BigNumber("-9843294234023040120.2343284939248324938249324"),
                              BigNumber("-122143298526215040354.4686569878496649876498648"));
}

TEST(BigNumberTest, difference) {
    ASSERT_EQ(BigNumber("11230000429213209590834920903290438992000234.20000002342342304023424938249324") - BigNumber("9843294234023040120.2343284939248324938249324"),
                              BigNumber("11230000429213209590834911059996204968960113.96567152949859054640931698249324"));
}

TEST(BigNumberTest, multiplication1) {
    ASSERT_EQ(BigNumber("11230000423242340009590834920903290438992000234.20000002342342304023424938249324") * BigNumber("-2340324920349032234903249029.234092340929423032324"),
                             BigNumber("-26281849846044227669247176406523359795804789724511943809421585021314940221.02240538290487583672844708461772070213849164023148976"));
}

TEST(BigNumberTest, multiplication2) {
    ASSERT_EQ(BigNumber("1") * BigNumber("0.0000000000000000000000000000000000000001"),
                              BigNumber("0.0000000000000000000000000000000000000001"));
}

TEST(BigNumberTest, multiplication3) {
    ASSERT_EQ(BigNumber("1") * BigNumber("0"), BigNumber("0"));
}

TEST(BigNumberTest, division1) {
    ASSERT_EQ(BigNumber("924") / BigNumber("0.00000000000000000000924"),
                              BigNumber("100000000000000000000000"));
}

TEST(BigNumberTest, division2) {
    ASSERT_EQ(BigNumber("0") / BigNumber("342832409324238409823904237.4328480239482394890328904823842"),
                              BigNumber("0"));
}

TEST(BigNumberTest, division3) {
    ASSERT_EQ(BigNumber("11230000423242340009590834920903290438992000234.20000002342342304023424938249324") / BigNumber("-2340324920349032234903249029.234092340929423032324"),
                              BigNumber("-4798479187910162531.832470267775833945135599208527139335993610337414090325079342622590760881056474047054360184330673736127651300503677929507934419022400540199234465806864999605339723105594690511972673874031342482248122406718435119359292"));
}